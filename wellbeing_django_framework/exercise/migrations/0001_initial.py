# Generated by Django 3.2.18 on 2023-06-25 06:03

from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', django_cryptography.fields.encrypt(models.CharField(max_length=100))),
                ('popularity', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('score', models.IntegerField(default=0)),
                ('calories', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Model_store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('exercise', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('model_url', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('created', django_cryptography.fields.encrypt(models.DateTimeField(auto_now_add=True))),
                ('updated', django_cryptography.fields.encrypt(models.DateTimeField(auto_now=True))),
                ('version', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Resource_store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_name', django_cryptography.fields.encrypt(models.TextField())),
                ('resource_url', django_cryptography.fields.encrypt(models.TextField())),
                ('resource_type', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('expire_time', django_cryptography.fields.encrypt(models.DateTimeField())),
                ('create_time', django_cryptography.fields.encrypt(models.DateTimeField(auto_now_add=True))),
                ('update_time', django_cryptography.fields.encrypt(models.DateTimeField(auto_now=True))),
                ('resource_version', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Wellbeing_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('user_email', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('user_password', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('user_phone', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('create_time', django_cryptography.fields.encrypt(models.DateTimeField(auto_now_add=True))),
                ('update_time', django_cryptography.fields.encrypt(models.DateTimeField(auto_now=True))),
                ('user_status', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('user_type', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('last_login', django_cryptography.fields.encrypt(models.DateTimeField())),
                ('user_group', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
            ],
            options={
                'ordering': ['-id'],
                'unique_together': {('user_name', 'user_email')},
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('date', models.DateField()),
                ('content', django_cryptography.fields.encrypt(models.CharField(max_length=500))),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('recurring_dates', django_cryptography.fields.encrypt(models.TextField(blank=True, null=True))),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exercise.exercise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exercise.wellbeing_user')),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', django_cryptography.fields.encrypt(models.CharField(max_length=100))),
                ('popularity', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('image_url', django_cryptography.fields.encrypt(models.URLField())),
                ('score', models.IntegerField(default=0)),
                ('calories', models.IntegerField(default=0)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exercise.exercise')),
            ],
        ),
    ]
