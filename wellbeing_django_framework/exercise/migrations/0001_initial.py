# Generated by Django 3.2.18 on 2023-05-07 14:40

from django.db import migrations, models
import django_cryptography.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', django_cryptography.fields.encrypt(models.JSONField(default=dict))),
                ('event_name', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('motion_description', django_cryptography.fields.encrypt(models.TextField())),
                ('event_motions', django_cryptography.fields.encrypt(models.JSONField(default=dict))),
                ('schedule', django_cryptography.fields.encrypt(models.TextField())),
                ('status', django_cryptography.fields.encrypt(models.CharField(choices=[('not_start', 'Not Start'), ('cancel', 'Canceled'), ('on_going', 'On Going'), ('completed', 'Completed'), ('expired', 'Expired')], default='Not Start', max_length=100))),
                ('created', django_cryptography.fields.encrypt(models.DateTimeField(auto_now_add=True))),
                ('updated', django_cryptography.fields.encrypt(models.DateTimeField(auto_now=True))),
                ('event_start_time', django_cryptography.fields.encrypt(models.DateTimeField())),
                ('event_end_time', django_cryptography.fields.encrypt(models.DateTimeField())),
                ('event_location', django_cryptography.fields.encrypt(models.TextField())),
                ('event_version', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Model_store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('model_type', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('model_store_url', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('created', django_cryptography.fields.encrypt(models.DateTimeField(auto_now_add=True))),
                ('updated', django_cryptography.fields.encrypt(models.DateTimeField(auto_now=True))),
                ('model_version', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Motion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motion_name', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('motion_type', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('motion_description', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('motion_created', django_cryptography.fields.encrypt(models.DateTimeField(auto_now_add=True))),
                ('motion_demo', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('motion_ready', django_cryptography.fields.encrypt(models.BooleanField(default=False))),
                ('motion_popularity', models.IntegerField(default=0)),
                ('motion_model_type', django_cryptography.fields.encrypt(models.TextField(default=''))),
                ('motion_model', django_cryptography.fields.encrypt(models.JSONField(default=dict))),
            ],
            options={
                'ordering': ['-motion_created'],
            },
        ),
        migrations.CreateModel(
            name='Resource_store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_name', django_cryptography.fields.encrypt(models.TextField())),
                ('resource_url', django_cryptography.fields.encrypt(models.TextField())),
                ('resource_type', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('expire_time', django_cryptography.fields.encrypt(models.DateTimeField())),
                ('create_time', django_cryptography.fields.encrypt(models.DateTimeField(auto_now_add=True))),
                ('update_time', django_cryptography.fields.encrypt(models.DateTimeField(auto_now=True))),
                ('resource_version', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', django_cryptography.fields.encrypt(models.JSONField(default=dict))),
                ('ver_url', django_cryptography.fields.encrypt(models.TextField())),
                ('ver_status', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('expire_time', django_cryptography.fields.encrypt(models.DateTimeField())),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', django_cryptography.fields.encrypt(models.JSONField(default=dict))),
                ('event', django_cryptography.fields.encrypt(models.JSONField(default=dict))),
                ('start_time', django_cryptography.fields.encrypt(models.DateTimeField(auto_now_add=True))),
                ('end_time', django_cryptography.fields.encrypt(models.DateTimeField())),
                ('label', django_cryptography.fields.encrypt(models.TextField())),
                ('score', models.IntegerField(default=0)),
                ('calories', models.IntegerField(default=0)),
                ('status', django_cryptography.fields.encrypt(models.CharField(choices=[('not_start', 'Not Start'), ('cancel', 'Canceled'), ('on_going', 'On Going'), ('completed', 'Completed'), ('expired', 'Expired')], default='Not Start', max_length=100))),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Wellbeing_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('user_email', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('user_password', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('user_phone', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('create_time', django_cryptography.fields.encrypt(models.DateTimeField(auto_now_add=True))),
                ('update_time', django_cryptography.fields.encrypt(models.DateTimeField(auto_now=True))),
                ('user_status', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('user_type', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
                ('last_login', django_cryptography.fields.encrypt(models.DateTimeField())),
                ('user_group', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=100))),
            ],
            options={
                'ordering': ['-id'],
                'unique_together': {('user_name', 'user_email')},
            },
        ),
    ]
